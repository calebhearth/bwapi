= Todo list for release 1.0 =

 * Make BWAPI compatible with replays.

== Complete interface functionality ==

  * [Unit]::removeTimer

  * [Unit]::isBeingHealed - implemented, but function unknown

  * [Unit]::[Unit#isVisible isVisible] - needs proper implementation, currently just uses heuristics. Did an exhaustive search of all bits in the unit, and none of them indicate visibility, so I think broodwar does not store visibility information anywhere, and instead just calculates it while rendering.

We could use [http://code.google.com/p/bwapi/source/browse/trunk/bwapi/BWAPI/Source/BW/UnitStatusFlags.h StatusFlags]::RequiresDetection and check the distances and detection radius of each detector unit. Detector unit types (with detection ranges according to [http://starcraft.wikia.com] )
  * Terran_Science_Vessel: 10
  * Terran_Missile_Turret: 11
  * Spell_Scanner_Sweep: 10
  * Zerg_Overlord: 9 (11 upgraded)
  * Zerg_Spore_Colony: 10
  * Protoss_Observer: 9 (11 upgraded)
  * Protoss_Photon_Cannon: 7

  * [TechType]::whatUses - returns a pointer to the type of unit that uses the tech type. For example, the irradiate tech type would return Terran science vessel.
  * [TechType]::getWeapon - returns the weapon that uses the tech type (or TechTypes::None if no weapon).
  * [WeaponType]::getTech - returns the tech type that must be researched before the weapon can be used.
  * [WeaponType]::whatUses - returns a set of pointers to the units that use this weapon.

  * [UpgradeType]::maxRepeats

  * [Player]::[Player#isAlliesWith isAlliesWith]
  * [Game]::[Game#getLatency getLatency] - right now just set to BattlenetLow in constructor.

  * Add TechTypes::Nuclear_Strike for completeness (so every special ability is a tech type).

  * [Game]::setScreenPosition(int x, int y)

  * Pylon power range - could add to Constants.h or to UnitType, where only the pylon unit type would have a non-zero power range.

  * [Game]::surrender

== Enforce CompleteMapInformation cheat flags ==
  * Game methods
  * Player methods
  * Unit methods

== Make BWAPI thread safe ==
  * Game methods
  * Player methods
  * Unit methods (information)
  * Unit methods (orders)

== Implement Error Code Usage ==
  * Game methods
  * Player methods
  * Unit methods

= Possible Ideas for release 1.x =

  * Order call-backs and/or buffering so the AI module can "listen" to what orders are being issued.