Methods that need to be implemented:
  * [Unit]::cancelMorph
  * [Unit]::cancelTrain - (cancel last)
  * [Unit]::cancelTrain - (cancel unit at specified index in training list)
  * [Unit]::cancelAddon

  * [Unit]::isUnderConstruction
  * [Unit]::isMorphing
  * [Unit]::isRepairing
  * [Unit]::isConstructing - only returned by SCVs
  * [Unit]::isHallucination

  * bool [Unit]::hasAddon
  * [Unit]{{{*}}} [Unit]::getAddon - returns NULL if the building does not have an addon.
  * [Unit]{{{*}}} [Unit]::getTransport - if this unit is loaded into a dropship/shuttle/overlord/bunker, getTransport returns the unit that this is transporting this unit.

  * [Unit]::getRallyPosition - might be stored as the target position of the building.
  * [Unit]::getRallyUnit - might be stored as the target unit of the building.

  * [Unit]::removeTimer

  * [Unit]::isBeingHealed - implemented, but function unknown

  * Replace [Unit]::[Unit#isDisabled isDisabled] with:
  * [Unit]::isUnpowered - StatusFlags::Disabled (unverified)

  * [Unit]::[Unit#isVisible isVisible] - needs proper implementation, currently just uses heuristics. Did an exhaustive search of all bits in the unit, and none of them indicate visibility, so I think broodwar does not store visibility information anywhere, and instead just calculates it while rendering.

We could use [http://code.google.com/p/bwapi/source/browse/trunk/bwapi/BWAPI/Source/BW/UnitStatusFlags.h StatusFlags]::RequiresDetection and check the distances and detection radius of each detector unit. Detector unit types (with detection ranges according to [http://starcraft.wikia.com] )
  * Terran_Science_Vessel: 10
  * Terran_Missile_Turret: 11
  * Spell_Scanner_Sweep: unknown
  * Zerg_Overlord: 9 (11 upgraded)
  * Zerg_Spore_Colony: 10
  * Protoss_Observer: 9 (11 upgraded)
  * Protoss_Photon_Cannon: 7


  * [UnitType]::[UnitType#maxEnergy maxEnergy]
  * [UnitType]::airDamage
  * [UnitType]::attackRange
  * [UnitType]::moveSpeed


  * [UnitType]{{{*}}} [Race]::getTransport - returns dropship/shuttle/overlord
  * [UnitType]{{{*}}} [Race]::getSupplyProvider - returns supply depot/pylon/overlord
 

  * [Player]::[Player#isAlliesWith isAlliesWith]
  * [Game]::[Game#getLatency getLatency] - right now just set to BattlenetLow in constructor.

  * [Game]::drawBox
  * [Game]::drawBoxFilled
  * [Game]::drawBoxLine
  
  * [Game]::hasCreep(int x, int y) - return true if the given tile has zerg creep.

  * Pylon power range - could add to Constants.h or to UnitType, where only the pylon unit type would have a non-zero power range.

  * [Game]::surrender