#sidebar TableOfContents

Class header file: [http://code.google.com/p/bwapi/source/browse/trunk/bwapi/include/BWAPI/Unit.h# BWAPI/Unit.h]

The Unit class is used to get information about individual units as well as issue orders to units.

Methods:

  * [#getOwner getOwner]
  * [#getType getType]
  * [#health health]
  * [#shield shield]
  * [#energy energy]
  * [#getKillCount getKillCount]
  * [#groundWeaponCooldown groundWeaponCooldown]
  * [#airWeaponCooldown airWeaponCooldown]
  * [#spellCooldown spellCooldown]
  * [#defenseMatrixPoints defenseMatrixPoints]
  * [#defenseMatrixTimer defenseMatrixTimer]
  * [#stimTimer stimTimer]
  * [#ensnareTimer ensnareTimer]
  * [#lockdownTimer lockdownTimer]
  * [#irradiateTimer irradiateTimer]
  * [#stasisTimer stasisTimer]
  * [#plagueTimer plagueTimer]
  * [#maelstromTimer maelstromTimer]
  * [#getPosition getPosition]
  * [#getTilePosition getTilePosition]

  * [#getTarget getTarget]
  * [#getTargetPosition getTargetPosition]
  * [#currentDirection currentDirection]
  * [#getOrder getOrder]
  * [#getOrderTarget getOrderTarget]
  * [#getOrderTimer getOrderTimer]
  * [#getSecondaryOrder getSecondaryOrder]
  * [#getBuildUnit getBuildUnit]
  * [#getRemainingBuildTime getRemainingBuildTime]
  * [#getRemainingTrainTime getRemainingTrainTime]
  * [#getChild getChild]
  * [#getTrainingQueue getTrainingQueue]
  * [#getLoadedUnits getLoadedUnits]
  * [#getTech getTech]
  * [#getUpgrade getUpgrade]
  * [#getRemainingResearchTime getRemainingResearchTime]
  * [#getRemainingUpgradeTime getRemainingUpgradeTime]
  * [#getRallyPosition getRallyPosition]
  * [#getRallyUnit getRallyUnit]

  * [#isAccelerating isAccelerating]
  * [#isBeingConstructed isBeingConstructed]
  * [#isBeingHealed isBeingHealed]
  * [#isBlind isBlind]
  * [#isBraking isBraking]
  * [#isBurrowed isBurrowed]
  * [#isCloaked isCloaked]
  * [#isCompleted isCompleted]
  * [#isConstructing isConstructing]
  * [#isDisabled isDisabled]
  * [#isIdle isIdle]
  * [#isLifted isLifted]
  * [#isLoaded isLoaded]
  * [#isLockedDown isLockedDown]
  * [#isMorphing isMorphing]
  * [#isMoving isMoving]
  * [#isRepairing isRepairing]
  * [#isResearching isResearching]
  * [#isSelected isSelected]
  * [#isSieged isSieged]
  * [#isStartingAttack isStartingAttack]
  * [#isStasised isStasised]
  * [#isTraining isTraining]
  * [#isUnderStorm isUnderStorm]
  * [#isUpgrading isUpgrading]
  * [#isVisible isVisible]

The following orders can be issued to units:

  * [#attackMove attackMove] - Attack move to a position
  * [#attackUnit attackUnit] - Attack a specific unit
  * [#rightClick rightClick] - Right click on a position
  * [#rightClick_2 rightClick] - Right click on a unit
  * [#train train]
  * [#build build]
  * [#invent research]
  * [#upgrade upgrade]
  * [#stop stop]
  * [#holdPosition holdPosition]
  * [#patrol patrol]
  * [#repair repair]
  * [#morph morph]
  * [#burrow burrow]
  * [#unburrow unburrow]
  * [#siege siege]
  * [#unsiege unsiege]
  * [#cloak cloak]
  * [#decloak decloak]
  * [#lift lift]
  * [#land land]
  * [#load load]
  * [#unload unload]
  * [#unloadAll unloadAll]
  * [#unloadAll_2 unloadAll]
  * [#cancelConstruction cancelConstruction]
  * [#haltConstruction haltConstruction]
  * [#cancelMorph cancelMorph]
  * [#cancelTrain cancelTrain] - cancel the last unit in the queue
  * [#cancelTrain_2 cancelTrain] - cancel the unit at a specific index in the queue
  * [#cancelAddon cancelAddon]
  * [#cancelResearch cancelResearch]
  * [#cancelUpgrade cancelUpgrade]
  * [#useTech useTech]
  * [#useTech_2 useTech]
  * [#useTech_3 useTech]

=== getOwner ===
[Player]{{{*}}} getOwner() const;

Returns a pointer to the player that owns this unit.

=== getType ===
[UnitType] getType() const;

Returns the type of the unit.

=== health ===
int health() const;

Returns the unit's current amount of health.

=== shield ===
int shield() const;

Returns the unit's current amount of shield.

=== energy ===
int energy() const;

Returns the unit's current amount of energy.

=== getKillCount ===
int getKillCount() const;

Returns the unit's current kill count.

=== groundWeaponCooldown ===
int groundWeaponCooldown() const;

Returns unit's ground weapon cooldown. It is 0 if the unit is ready to attack.

=== airWeaponCooldown ===
int airWeaponCooldown() const;

Returns unit's air weapon cooldown. It is 0 if the unit is ready to attack.

=== spellCooldown ===
int spellWeaponCooldown() const;

Returns unit's ground weapon cooldown. It is 0 if the unit is ready cast a spell.

=== defenseMatrixPoints ===
int defenseMatrixPoints() const;

Returns the remaining hitpoints of the defense matrix. 
Initially a defense Matrix has 64000(250 ingame) points. Note that you have to divide it by
256 to get the hitpoint format the game displays.

=== defenseMatrixTimer ===
int defenseMatrixTimer() const;

Returns the time until the defense matrix wears off. 0 -> No defense Matrix present.

=== stimTimer ===
int stimTimer() const;

Returns the time until the stimpack wears off. 0 -> No stimpack boost present.

=== ensnareTimer ===
int ensnareTimer() const;

Returns the time until the ensnare effect wears off. 0 -> No ensnare effect present.

=== lockdownTimer ===
int lockdownTimer() const;

Returns the time until the lockdown wears off. 0 -> No lockdown present.

=== irradiateTimer ===
int irradiateTimer() const;

Returns the time until the radiation wears off. 0 -> No radiation present.

=== stasisTimer ===
int stasisTimer() const;

Returns the time until the stasis field wears off. 0 -> No stasis field present.

=== plagueTimer ===
int plagueTimer() const;

Returns the time until the plague wears off. 0 -> No plague present.

=== maelstromTimer ===
int maelstromTimer() const;

Returns the time until the maelstrom wears off. 0 -> No maelstrom present.

=== getPosition ===
[Misc#Position Position] getPosition() const;

Returns the position of the unit on the map.
=== getTilePosition ===
[Misc#TilePosition TilePosition] getTilePosition() const;

Returns the build tile position of the unit on the map. Useful if the unit is a building.

=== getTarget ===
[Unit]{{{*}}} getTarget() const;

=== getTargetPosition ===
[Misc#Position Position] getTargetPosition() const;

=== currentDirection ===
int currentDirection() const;

Returns the direction the unit is facing. Range 0-255.
North: 0, East: 64, South: 128, West: 192

=== getOrder ===
[Order] getOrder() const;

=== getOrderTarget ===
[Unit]{{{*}}} getOrderTarget() const;

=== getOrderTimer ===
int getOrderTimer() const;

=== getSecondaryOrder ===
[Order] getSecondaryOrder() const;

=== getBuildUnit ===
[Unit]{{{*}}} getBuildUnit() const;

If the unit is an SCV that is constructing a building, this will return the building it is constructing. If the unit is a Terran building that is being constructed, this will return the SCV that is constructing it.

=== getRemainingBuildTime ===
int getRemainingBuildTime() const;

Returns the remaining build time of a unit/building that is being constructed.

=== getRemainingTrainTime ===
int getRemainingTrainTime() const;

Returns the remaining time of the unit that is currently being trained.


=== getChild ===
[Unit]{{{*}}} getChild() const;

=== getTrainingQueue ===
std::list< UnitType > getTrainingQueue() const;

Returns the list of units queued up to be trained.

See also: [Unit]::[Unit#train train], [Unit]::[Unit#cancelTrain cancelTrain], [Unit]::[Unit#cancelTrain_2 cancelTrain], [Unit]::[Unit#isTraining isTraining].

=== getLoadedUnits ===
std::list<Unit{{{*}}}> getLoadedUnits() const;

Returns a list of the units loaded into a Terran Bunker, Terran Dropship, Protoss Shuttle, or Zerg Overlord.

=== getTech ===
[TechType] getTech() const;

Returns the tech that the unit is currently researching. If the unit is not researching anything, [TechTypes]::None is returned.

=== getUpgrade ===
[UpgradeType] getUpgrade() const;

Returns the upgrade that the unit is currently upgrading. If the unit is not upgrading anything, [UpgradeTypes]::None is returned.

=== getRemainingResearchTime ===
int getRemainingResearchTime() const;

Returns the amount of time until the unit is done researching its current tech. If the unit is not researching anything, 0 is returned.

=== getRemainingUpgradeTime ===
int getRemainingUpgradeTime() const;

Returns the amount of time until the unit is done upgrading its current upgrade. If the unit is not upgrading anything, 0 is returned.

=== getRallyPosition ===
[Misc#Position Position] getRallyPosition() const;

Returns the position the building is rallied to. If the building does not produce units, Positions::None is returned.

=== getRallyUnit ===
[Unit] getRallyUnit() const;

Returns the unit the building is rallied to. If the building is not rallied to any unit, NULL is returned.

=== isAccelerating ===
bool isAccelerating() const;

Returns true if the unit is currently accelerating.

=== isBeingConstructed ===
bool isBeingConstructed() const;

Returns true if the unit is being constructed. Always true for incomplete Protoss and Zerg buildings, and true for incomplete Terran buildings that have an SCV constructing them. If the SCV halts construction, isBeingConstructed will return false.

See also: [Unit]::[Unit#build build], [Unit]::[Unit#cancelConstruction cancelConstruction], [Unit]::[Unit#haltConstruction haltConstruction], [Unit]::[Unit#isConstructing isConstructing].

=== isBeingHealed ===
bool isBeingHealed() const;

Not implemented yet.

=== isBlind ===
bool isBlind() const;

Returns true if the unit is currently blind from a Medic's Optical Flare.

=== isBraking ===
bool isBraking() const;

Returns true if the unit is currently braking/slowing down.

=== isBurrowed ===
bool isBurrowed() const;

Returns true if the unit is a Zerg unit that is current burrowed.

See also: [Unit]::[Unit#burrow burrow], [Unit]::[Unit#unburrow unburrow].

=== isCloaked ===
bool isCloaked() const;

Returns true if the unit is cloaked.

See also: [Unit]::[Unit#cloak cloak], [Unit]::[Unit#decloak decloak].

=== isCompleted ===
bool isCompleted() const;

Returns true if the unit has been completed.

=== isConstructing ===
bool isConstructing() const;

Returns true if the unit is a Terran SCV that is constructing a building.

See also: [Unit]::[Unit#build build], [Unit]::[Unit#cancelConstruction cancelConstruction], [Unit]::[Unit#haltConstruction haltConstruction], [Unit]::[Unit#isBeingConstructed isBeingConstructed].

=== isDisabled ===
bool isDisabled() const;

Not implemented yet.

=== isIdle ===
bool isIdle() const;

Returns true if the unit is not doing anything.

=== isLifted ===
bool isLifted() const;

Returns true if the unit is a Terran building that is currently lifted off the ground.

See also: [Unit]::[Unit#lift lift],[Unit]::[Unit#land land].

=== isLoaded ===
bool isLoaded() const;

Return true if the unit is loaded into a Terran Bunker, Terran Dropship, Protoss Shuttle, or Zerg Overlord.

See also: [Unit]::[Unit#load load], [Unit]::[Unit#unload unload], [Unit]::[Unit#unloadAll unloadAll], [Unit]::[Unit#unloadAll_2 unloadAll].

=== isLockedDown ===
bool isLockedDown() const;

Returns true if the unit is locked down by a Terran Ghost.

=== isMorphing ===
bool isMorphing() const;

Returns true if the unit is a zerg unit that is morphing.

See also: [Unit]::[Unit#morph morph], [Unit]::[Unit#cancelMorph cancelMorph].

=== isMoving ===
bool isMoving() const;

Returns true if the unit is moving.

=== isRepairing ===
bool isRepairing() const;

Returns true if the unit is a Terran SCV that is repairing or moving to repair another unit.

=== isResearching ===
bool isResearching() const;

Returns true if the unit is a building that is researching tech. See [TechTypes] for the complete list of available techs in Broodwar.

See also: [Unit]::[Unit#research research], [Unit]::[Unit#cancelResearch cancelResearch], [Unit]::[Unit#getTech getTech], [Unit]::[Unit#getRemainingResearchTime getRemainingResearchTime].

=== isSelected ===
bool isSelected() const;

Returns true if the unit has been selected by the user via the starcraft GUI. Only available if you enable [Misc#Flag Flag]::UserInput during [AIModule]::[AIModule#onStart onStart].

=== isSieged ===
bool isSieged() const;

Returns true if the unit is a Terran Siege Tank that is currently in Siege mode.

See also: [Unit]::[Unit#siege siege], [Unit]::[Unit#unsiege unsiege].

=== isStartingAttack ===
bool isStartingAttack() const;

Returns true if the unit is starting to attack.

=== isStasised ===
bool isStasised() const;

Returns true if the unit has been stasised by a Protoss Arbiter.

=== isTraining ===
bool isTraining() const;

Returns true if the unit is training units (i.e. a Barracks training Marines).

See also: [Unit]::[Unit#train train], [Unit]::[Unit#getTrainingQueue getTrainingQueue], [Unit]::[Unit#cancelTrain cancelTrain], [Unit]::[Unit#cancelTrain_2 cancelTrain].

=== isUnderStorm ===
bool isUnderStorm() const;

Returns true if the unit is under a Protoss Psionic Storm.

=== isUpgrading ===
bool isUpgrading() const;

Returns true if the unit is a building that is upgrading. See [UpgradeTypes] for the complete list of available upgrades in Broodwar.

See also: [Unit]::[Unit#upgrade upgrade], [Unit]::[Unit#cancelUpgrade cancelUpgrade], [Unit]::[Unit#getUpgrade getUpgrade], [Unit]::[Unit#getRemainingUpgradeTime getRemainingUpgradehTime].

=== isVisible ===
bool isVisible() const;

Returns true if the unit is visible. Incomplete: only based on heuristics right now.

=== attackMove ===
bool attackMove([Misc#Position Position] target);

Orders the unit to attack move to the specified location.

=== attackUnit ===
bool attackUnit([Misc#Position Position] target);

Orders the unit to attack the specified unit.

=== rightClick ===
bool rightClick([Misc#Position Position]target);

Works like the right click in the GUI.

=== rightClick_2 ===
bool rightClick([Unit]{{{*}}} target);

Works like the right click in the GUI. Right click on a mineral patch to order a worker to mine, right click on an enemy to attack it.

=== train ===
bool train([UnitType] type);

Orders this unit to a the specified unit type to the training queue. Note that the player must have sufficient resources to train.

=== build ===
bool build([Misc#TilePosition TilePosition] p, [UnitType] type);

Orders the unit to build the given unit type at the given position. Note that if the player does not have enough resources when the unit attempts to place the building down, the order will fail.

=== research ===
bool research([TechType] tech);

Orders the unit to research the given tech type.

=== upgrade ===
bool upgrade(UpgradeType upgrade);

Orders the unit to upgrade teh given upgrade type.

=== stop ===
bool stop(); 

Orders the unit to stop.

=== holdPosition ===
bool holdPosition();

Orders the unit to hold its position.

=== patrol ===
bool patrol([Misc#Position Position] target);

Orders the unit to patrol between its current position and the specified position.

=== repair ===
bool repair([Unit]{{{*}}} target);

Orders the unit to repair the specified unit. Only Terran SCVs can be ordered to repair, and the target must be a mechanical Terran unit or building.

=== morph ===
bool morph([UnitType] type);

Orders the unit to morph into the specified unit type. Returns false if given a wrong type.

=== burrow ===
bool burrow();

Orders the unit to burrow. Either the unit must be a Zerg Lurker, or the unit must be a Zerg ground unit and burrow tech must be researched.

=== unburrow ===
bool unburrow();

Orders the burrowed unit to unburrow. 

=== siege ===
bool siege();

Orders the unit to siege. Note: unit must be a Terran siege tank.

=== unsiege ===
bool unsiege();

Orders the unit to unsiege. Note: unit must be a Terran siege tank.

=== cloak ===
bool cloak();

Orders the unit to cloak.

=== decloak ===
bool decloak();

Orders the unit to decloak.

=== lift ===
bool lift();

Orders the unit to lift. Note: unit must be a Terran building that can be lifted.

=== land ===
bool land([Misc#TilePosition TilePosition] target);

Orders the unit to land. Note: unit must be a Terran building that is currently lifted.

=== load ===
bool load([Unit]{{{*}}} target);

Orders the unit to load the target unit.

=== unload ===
bool unload([Unit]{{{*}}} target);

Orders the unit to unload the target unit.

=== unloadAll ===
bool unloadAll();

Orders the unit to unload all loaded units at the unit's current position.

=== unloadAll_2 ===
bool unloadAll([Misc#Position Position] target);

Orders the unit to unload all loaded units at the specified location. Unit should be a Terran Dropship, Protoss Shuttle, or Zerg Overlord. If the unit is a Terran Bunker, the units will be unloaded right outside the bunker, like in the first version of unloadAll.

=== cancelConstruction ===
bool cancelConstruction();

Orders the building to stop being constructed.

=== haltConstruction ===
bool haltConstruction();

Orders the SCV to stop constructing the building, and the building is left in a partially complete state until it is canceled, destroyed, or completed.

=== cancelMorph ===
bool cancelMorph();

Orders the unit to stop morphing.

=== cancelTrain ===
bool cancelTrain();

Orders the unit to remove the last unit from its training queue.

See also: [Unit]::[Unit#train train], [Unit]::[Unit#cancelTrain_2 cancelTrain], [Unit]::[Unit#isTraining isTraining], [Unit]::[Unit#getTrainingQueue getTrainingQueue].

=== cancelTrain_2 ===
bool cancelTrain(int slot);

Orders the unit to remove the specified unit from its training queue.

=== cancelAddon ===
bool cancelAddon();

Orders the unit to stop making the addon.

=== cancelResearch ===
bool cancelResearch();

Orders the unit to cancel a research in progress.

=== cancelUpgrade ===
bool cancelUpgrade();

Orders the unit to cancel an upgrade in progress.

=== useTech ===
bool useTech(Tech tech);

Orders the unit to use a tech not requiring a target (ie Stim Pack).
Returns true if it is a valid tech.

=== useTech_2 ===
bool useTech(Tech tech, Position position);

Orders the unit to use a tech requiring a position target (ie Dark Swarm).
Returns true if it is a valid tech.

=== useTech_3 ===
bool useTech(Tech tech, Unit{{{*}}} target);

Orders the unit to use a tech requiring a unit target (ie Irradiate).
Returns true if it is a valid tech.