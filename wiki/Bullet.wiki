#sidebar TableOfContents

Class header file: [http://code.google.com/p/bwapi/source/browse/trunk/bwapi/include/BWAPI/Bullet.h# BWAPI/Bullet.h]


Methods:

 * [#getType getType]
 * [#getSource getSource]
 * [#getPosition getPosition]
 * [#getAngle getAngle]
 * [#getVelocityX getVelocityX]
 * [#getVelocityY getVelocityY]
 * [#getTarget getTarget]
 * [#getTargetPosition getTargetPosition]
 * [#getRemoveTimer getRemoveTimer]
 * [#exists exists]
 * [#isVisible isVisible]

=== getType ===
[BulletType] getType() const;

Returns the type of the bullet.

=== getSource ===
[Unit]{{{*}}} getSource() const;

Returns the unit that fired the bullet. If the unit is inaccessible (such as a cloaked or burrowed enemy unit with no detection around and complete map information disabled), this will return NULL.

=== getPosition ===
[Misc#Position Position] getPosition() const;

Returns the position of the bullet.

=== getAngle ===
double getAngle() const;

Returns the direction the bullet is facing/traveling in, measured in radians. An angle of 0 means the bullet is facing east/right.

=== getVelocityX ===
double getVelocityX() const;

Returns the x component of the bullet's velocity, measured in pixels per frame.

=== getVelocityY ===
double getVelocityY() const;

Returns the y component of the bullet's velocity, measured in pixels per frame. 

=== getTarget ===
[Unit]{{{*}}} getTarget() const;

Returns the unit that the bullet is trying to hit. If the unit is inaccessible (such as a cloaked or burrowed enemy unit with no detection around and complete map information disabled), this will return NULL.

=== getTargetPosition ===
[Misc#Position Position] getTargetPosition() const;

Returns the target position of the bullet.

=== getRemoveTimer ===
int getRemoveTimer() const;

Returns the remove timer of the bullet.

=== exists ===
bool exists() const;

If Complete Map Information is enabled, this returns true if the bullet exists. Otherwise, this returns true if the bullet exists and is visible.

=== isVisible ===
bool isVisible() const;

bool isVisible([Player]{{{*}}} player) const;

Returns true if the bullet exists and is visible.

If Complete Map Information is enabled, you can also specify to which player you want to check visibility.