#sidebar TableOfContents

Class header file: [http://code.google.com/p/bwapi/source/browse/trunk/bwapi/include/BWAPI/AIModule.h# BWAPI/AIModule.h]

AIModule is a virtual class that is intended to be implemented or inherited by a custom AI class. The following callbacks available to AIs:

  * [#onStart onStart]
  * [#onEnd onEnd]
  * [#onFrame onFrame]
  * [#onAddUnit onAddUnit]
  * [#onRemoveUnit onRemoveUnit]
  * [#onSendText onSendText]

Notes:

Using BWAPI in a different thread than the default one will produce unexpected results and possibly crash the program. Multi-threaded AIs are possible so long as all BWAPI interaction is limited to the default thread (during one of the call-backs).

=== onStart ===
void onStart();

BWAPI calls this at the start of a match. Typically an AI will execute set up code in this method (initialize data structures, load build orders, etc).

=== onEnd ===
void onEnd();

BWAPI calls this at the end of the match.

=== onFrame ===
void onFrame();

BWAPI calls this on every logical frame in the game.

=== onAddUnit ===
void onAddUnit([Unit]{{{*}}} unit);

BWAPI calls this when a unit is created. Note that this is not called when a unit changes type (such as larva into egg or egg into drone). Building a refinery/assimilator/extractor will not produce an onAddUnit call since the vespene geyser changes to the unit type of the refinery/assimilator/extractor.

=== onRemoveUnit ===
void onRemoveUnit([Unit]{{{*}}} unit);

BWAPI calls this when a unit dies. When a zerg drone becomes an extractor, the Vespene geyser changes to the Zerg Extractor type and the drone is removed.

=== onSendText ===
bool onSendText(std::string text);

if [Misc#Flag Flag]::UserInput is enabled, BWAPI will call this each time a user enters a message into the chat.