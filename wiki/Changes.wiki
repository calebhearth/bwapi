== Changes since BWAPI Beta 2.7.2 (r2239) ==

  * Added class [GameType].
  * Added [AIModule#onReceiveText AIModule::onReceiveText].
  * Added [Game#isBattleNet Game::isBattleNet].
  * Added [MenuAutomation menu automation].

  * Fixed a bug where [Game#getLatency Game::getLatency] would return incorrect values for games played on BattleNet.

== Changes from BWAPI Beta 2.7.1 (r2224) to BWAPI Beta 2.7.2 (r2239) ==

Fixed a bug in GameImpl::spriteToUnit which caused the game to crash every once in a while.

== Changes from BWAPI Beta 2.6.1 (r1914) to BWAPI Beta 2.7.1 (r2224) ==

AIs can now connect from another process using BWAPIClient.lib.

New enums:
  * Added enum [EventType]

New classes:
  * Added class [Event]
  * Added class [UnitCommand]
  * Added class [UnitCommandType]

The following functions have been added:
  * Added [AIModule#onSaveGame AIModule::onSaveGame] - called when the user saves the single player match. Currently is triggered twice.
  * Added [Game#getEvents Game::getEvents] - returns the set of events for the frame
  * Added [Game#indexToUnit Game::indexToUnit] - returns the Unit currently at the given index in Starcraft's internal Unit table. Only available when the Complete Map Information flag is enabled.
  * Added [Game#isInGame Game::isInGame] - returns true if Broodwar is currently in a match
  * Added [Unit#isAttacking Unit::isAttacking] - returns true if the unit is attacking. Does not yet work for siege tanks or goliaths.
  * Added [Unit#isVisible Unit::isVisible(Player* player)] - returns true if the given player can see the given unit. Only available in replays or if the complete map information flag has been enabled.
  * Added [Unit#issueCommand Unit::issueCommand] - general purpose function to issue any valid unit command.

All member functions of Race, TechType, UnitType, UpgradeType, WeaponType now return other objects by value instead of by pointer. For example [TechType#whatResearches TechType::whatResearches] returns a UnitType object rather than a const pointer to a UnitType object.

The following [Orders Orders] have been renamed:
  * Nothing1 -> UnusedNothing
  * Powerup1 -> UnusedPowerup
  * Nothing2 -> Nothing
  * RallyPoint1 -> RallyPointUnit
  * RallyPoint2 -> RallyPointTile
  * Morph1 -> ZergUnitMorph
  * Morph2 -> ZergBuildingMorph
  * BuildSelf1 -> TerranBuildSelf
  * Build5 -> BuildNydusExit
  * Enternyduscanal -> EnterNydusCanal
  * BuildSelf2 -> ProtossBuildSelf
  * CarrierIgnore1 -> ReaverCarrierMove
  * HoldPosition1 -> CarrierHoldPosition
  * ReaverHold -> ReaverHoldPosition
  * RechargeShields1 -> RechargeShieldsUnit
  * Rechargeshields2 -> RechargeShieldsBattery
  * BuildingLiftoff -> BuildingLiftOff
  * DroneLiftoff -> DroneLiftOff
  * Liftoff -> LiftingOff
  * Harvest5 -> Interrupted
  * Pickup1 -> PickupIdle
  * Pickup2 -> PickupTransport
  * Pickup3 -> PickupBunker
  * Powerup2 -> PowerupIdle
  * HoldPosition2 -> HoldPosition
  * HoldPosition3 -> QueenHoldPosition
  * HoldPosition4 -> SuicideHoldPosition

Bug Fixes:
  * Fixed a bug where [Unit#getGroundWeaponCooldown Unit::getGroundWeaponCooldown] would always return 0 for Siege Tanks and Goliaths.
  * Fixed a bug where [Unit#getAirWeaponCooldown Unit::getAirWeaponCooldown] would always return 0 for Goliaths.
  * Fixed a bug with [Unit#isConstructing Unit::isConstructing] - now also returns true when the unit's order is TerranBuildSelf, ProtossBuildSelf, ZergBuildSelf, BuildNydusExit, and BuildAddon.
  * Fixed a bug with [Unit#isIdle Unit::isIdle] - now also returns true when the unit's order is Reaver, Neutral, TowerGuard, and Burrowed.
  * Fixed a bug with [Unit#isMorphing Unit::isMorphing] - now also returns true when the unit's order is ZergBirth.
  * Fixed a bug where [Unit#isTraining Unit::isTraining] - would return true for morphing hatcheries, lairs, and hives.
  * Fixed a bug where [Unit#useTech Unit::useTech] would not work for Archon_Warp or Dark_Archon_Meld.
  * Fixed a bug where [Game#canBuildHere Game::canBuildHere] would return true for refineries over geysers that already have refineries on them.
  * Fixed a bug where [Game#setScreenPosition Game::setScreenPosition] would crash the game if given a position with negative coordinate values.
  * Fixed a bug where [Game#isBuildable Game::isBuildable] would return true for the inaccessible row of tiles at the bottom of the map.
  * Fixed a bug where [Game#isWalkable Game::isWalkable] would return true for the four inaccessible rows of tiles at the bottom of the map.
  * Fixed a bug where [UnitType#maxGroundHits UnitType::maxGroundHits] would return 0 for Terran Siege Tank Siege Mode, Terran Siege Tank Tank Mode, and Terran Goliath.
  * Fixed a bug where [UnitType#maxAirHits UnitType::maxAirHits] would return 0 for Terran Goliath.

== Changes from BWAPI Beta 2.6 (r1910) to BWAPI Beta 2.6.1 (r1914) ==

  * Added [Unit#getID Unit::getID] - returns a unique ID for the unit.
  * Fixed a crash inadvertently introduced in BWAPI Beta 2.6 related to the new mouse and key state functionality.

== Changes from BWAPI Beta 2.5 (r1830) to BWAPI Beta 2.6 (r1910) ==

  * Added [Unit#getLarva Unit::getLarva] - returns a set of 0, 1, 2, or 3 larva units that have spawned from the given Hatchery, Lair, or Hive.
  * Added [Unit#getHatchery Unit::getHatchery] - returns the Hatchery, Lair, or Hive that spawned the given larva. Returns NULL if the unit is not a Zerg Larva.
  * Added [Unit#returnCargo Unit::returnCargo] - returns the worker's cargo (minerals/gas) to a nearby resource depot. Works the same way as the "Return Cargo" button in the Starcraft GUI.
  * Added [Misc#Position Position::getApproxDistance] - an approximate distance function similar to the one starcraft uses.
  * Added [Player#isDefeated Player::isDefeated] - returns true if the player has been defeated
  * Added [Player#isVictorious Player::isVictorious] - returns true if the player has achieved victory.
  * Added [Game#getMousePosition Game::getMousePosition] - returns the position of the mouse on the screen.
  * Added [Game#getScreenPosition Game::getScreenPosition] - returns the position of the screen on the map.
  * Added [Game#setScreenPosition Game::setScreenPosition] - moves the screen to the given position on the map.
  * Added [Game#pingMinimap Game::pingMinimap] - pings the given position on the minimap.
  * Added [Game#getMouseState Game::getMouseState] - returns true if the specified [Input#MouseButton MouseButton] is pressed
  * Added [Game#getKeyState Game::getKeyState] - returns true if the specified [Input#Key Key] is pressed

The following functions have changed in functionality:

  * [AIModule#onEnd AIModule::onEnd] is now called before any user interaction at the end of games and replays.
  * [Game#getFrameCount Game::getFrameCount] no longer increases while the game is paused, however [AIModule#onFrame AIModule::onFrame] is still called.
  * [Unit#getRemainingTrainTime Unit::getRemainingTrainTime] now returns the number of frames until the next larva spawns at the given Hatchery, Lair, or Hive. Works as before on other unit types.
  * [Unit#getDistance Unit::getDistance(Unit* target)] now computes the distance between units more similar to the way starcraft computes distance between units when determining if a unit is in attack range.
  * [Unit#getDefenseMatrixPoints Unit::getDefenseMatrixPoints] now returns actual defense matrix hit points (not multiplied by 256).

Bug fixes:

  * Fixed a bug where scourge that suicide into other units would not produce an [AIModule#onUnitDestroy AIModule::onUnitDestroy] message.
  * Fixed a bug where [Game#canUpgrade Game::canUpgrade] would sometimes return true even though the player did not have enough resources.
  * Fixed a bug where [Unit#cancelTrain Unit::cancelTrain] would not cancel Terran Nuclear Missiles when called on a Terran Nuclear Missile Silo.
  * Fixed a bug where [Unit#isTraining Unit::isTraining] would return false when called on a Terran Nuclear Missile Silo training a Terran Nuclear Missile.
  * Fixed a bug where [Unit#getTrainingQueue Unit::getTrainingQueue] would return and empty list when called on a Terran Nuclear Missile Silo training a Terran Nuclear Missile.

== Changes from BWAPI Beta 2.4 (r1689) to BWAPI Beta 2.5 (r1830) ==

  * Added a logging option to bwapi.ini - by default it is set to off.
  * Added [TechType]::[TechType#getRace getRace] (the function was declared before but not actually implemented).
  * Added [Unit]::[Unit#getBuildType getBuildType] - returns the building type a worker is about to construct. If the unit is a morphing Zerg unit or an incomplete building, this returns the UnitType the unit is about to become upon completion.

  * Fixed TechTypes::Restoration.whatResearches() so that it now returns UnitTypes::Terran_Academy.
  * Fixed a bug where [Game]::[Game#canBuildHere canBuildHere] would return true even when a nexus/command center/hatchery was too close to invisible minerals/geysers. The function now uses static mineral and geyser data and assumes mineral fields exist unless it can see the build tile where the mineral is supposed to be, and cannot see the mineral unit.
  * Fixed a bug where [Unit]::[Unit#isIdle isIdle] would return false after a worker failed to start construction of a building.
  * Fixed a bug where using Siege Tanks would cause the game to crash.
  * Fixed a bug where BWAPI would crash on game end if a player left during the game.
  * Fixed a bug where [Unit]::[Unit#isGatheringGas isGatheringGas] would sometimes return false for drones harvesting gas into a morphing Hatchery.
  * Fixed a bug where chat messages in multiplayer games would either appear garbled or not show at all.

== Changes from BWAPI Beta 2.3 (r1610) to BWAPI Beta 2.4 (r1689): ==

  * Added [AttackType] class, however this won't be of much use until the Attack class is implemented (which will let AI Modules "see" projectiles, bullets, psi storms, lurker attacks, etc).
  * Added [Game#isExplored Game::isExplored] - returns true for tiles that are visible or were visible at some point earlier in the match.
  * Added [Unit#isBeingGathered Unit::isBeingGathered] - returns true for mineral patches and the three types of refineries when a unit is gathering from it.

  * Renamed Game::buildable to [Game#isBuildable Game::isBuildable]
  * Renamed Game::walkable to [Game#isWalkable Game::isWalkable]
  * Renamed Game::visible to [Game#isVisible Game::isVisible]
  * Renamed Game::groundHeight to [Game#getGroundHeight Game::getGroundHeight]
  * Added [Misc#TilePosition TilePosition] versions of [Game#isBuildable Game::isBuildable], [Game#isVisible Game::isVisible], [Game#hasCreep Game::hasCreep], and [Game#hasPower Game::hasPower].

The following functions have changed in functionality:

  * [UnitType#seekRange UnitType::seekRange] now returns the seek range in pixels.
  * [UnitType#sightRange UnitType::sightRange] now returns the sight range in pixels.
  * [UnitType#maxHitPoints UnitType::maxHitPoints] now returns actual max hit points (not multiplied by 256).
  * [Unit#getHitPoints Unit::getHitPoints] now returns actual current hit points (not multiplied by 256).
  * [Unit#getShields Unit::getShields] now returns actual current shields (not multiplied by 256).
  * [Unit#getEnergy Unit::getEnergy] now returns actual current energy (not multiplied by 256).
  * [UnitType#canAttack UnitType::canAttack] now returns false for overlords, dropships, and other types of units that cannot attack.
  * [Player#hasResearched Player::hasResearched] now returns true for abilities that the player has researched by default, such as Scanner Sweep.
  * [Game#getFrameCount Game::getFrameCount] now counts from 0. So the first frame is frame 0.
  * [Game#sendText Game::sendText] now processes most cheat codes in single player games. For example, typing Broodwar->sendText("black sheep wall") will reveal the entire map.

Bug fixes:

  * Fixed a bug where [Game#isVisible Game::isVisible] would crash the program when called during a replay.
  * Fixed a bug where [Unit#setRallyPosition Unit::setRallyPosition] and [Unit#setRallyUnit Unit::setRallyUnit] would not execute properly.
  * Fixed a bug where [Unit#patrol Unit::patrol] would appear to change the position of the unit to the target position.
  * Fixed a bug where [Unit#isStartingAttack Unit::isStartingAttack] would always be false for certain types of units, even when they were attacking.
  * Fixed a bug where scanner sweep (and possibly other tech types that don't need to be researched) would not work.
  * Fixed a bug where [AIModule#onFrame AIModule::onFrame] would be called twice on the first frame.
  * Fixed a bug where [Unit#train Unit::train] would not allow more than one unit to be added to the training queue.
  * Fixed a bug where [AIModule#onUnitDestroy AIModule::onUnitDestroy] would not be called for units loaded into dropships/shuttles/overlords when the transport unit was destroyed.
  * Fixed [UnitType#topSpeed UnitType::topSpeed], [Unit#getVelocityX Unit::getVelocityX], and [Unit#getVelocityY Unit::getVelocityY]. Everything should now be in pixels per frame.

== Changes from BWAPI Beta 2.2 (r1491) to BWAPI Beta 2.3 (r1610): ==

  * bwapi.ini file no longer accepts curly brace definitions.

The following functions have been added:

  * [AIModule#onUnitRenegade AIModule::onUnitRenegade] - called when a unit changes ownership.
  * [AIModule#onPlayerLeft AIModule::onPlayerLeft] - called when a player leaves the game.
  * [AIModule#onNukeDetect AIModule::onNukeDetect] - called when a nuclear launch has been detected. If the target position is visible at the time of launch (or complete map information is enabled), the target position is provided.
  * [Game#restartGame Game::restartGame] - restarts the single player match.
  * [Unit#getUpgradeLevel Unit::getUpgradeLevel] - returns the upgrade level of the unit.
  * [Unit#getVelocityX Unit::getVelocityX] - returns the x component of velocity in pixels per frame.
  * [Unit#getVelocityY Unit::getVelocityY] - returns the y component of velocity in pixels per frame.
  * [Player#leftGame Player::leftGame] - returns true if the player has left the game.
  * [UnitType#upgrades UnitType::upgrades] - returns the set of upgrades that can affect this UnitType.
  * [UpgradeType#whatUses UpgradeType::whatUses] - returns the set of unit types that are affected by this UpgradeType.

The following functions have been renamed:

  * Unit::getCurrentDirection has been renamed to [Unit#getAngle Unit::getAngle]

  * Player::researching has been renamed to [Player#isResearching Player::isResearching]
  * Player::researched has been renamed to [Player#hasResearched Player::hasResearched]
  * Player::upgrading has been renamed to [Player#isUpgrading Player::isUpgrading]
  * Player::upgradeLevel has been renamed to [Player#getUpgradeLevel Player::getUpgradeLevel]

  * Game::drawMapBox has been renamed to [Game#drawBox Game::drawBoxMap]
  * Game::drawMouseBox has been renamed to [Game#drawBox Game::drawBoxMouse]
  * Game::drawScreenBox has been renamed to [Game#drawBox Game::drawBoxScreen]

  * Game::drawMapTriangle has been renamed to [Game#drawTriangle Game::drawTriangleMap]
  * Game::drawMouseTriangle has been renamed to [Game#drawTriangle Game::drawTriangleMouse]
  * Game::drawScreenTriangle has been renamed to [Game#drawTriangle Game::drawTriangleScreen]

  * Game::drawMapCircle has been renamed to [Game#drawCircle Game::drawCircleMap]
  * Game::drawMouseCircle has been renamed to [Game#drawCircle Game::drawCircleMouse]
  * Game::drawScreenCircle has been renamed to [Game#drawCircle Game::drawCircleScreen]

  * Game::drawMapEllipse has been renamed to [Game#drawEllipse Game::drawEllipseMap]
  * Game::drawMouseEllipse has been renamed to [Game#drawEllipse Game::drawEllipseMouse]
  * Game::drawScreenEllipse has been renamed to [Game#drawEllipse Game::drawEllipseScreen]

  * Game::drawMapDot has been renamed to [Game#drawDot Game::drawDotMap]
  * Game::drawMouseDot has been renamed to [Game#drawDot Game::drawDotMouse]
  * Game::drawScreenDot has been renamed to [Game#drawDot Game::drawDotScreen]

  * Game::drawMapLine has been renamed to [Game#drawLine Game::drawLineMap]
  * Game::drawMouseLine has been renamed to [Game#drawLine Game::drawLineMouse]
  * Game::drawScreenLine has been renamed to [Game#drawLine Game::drawLineScreen]

When complete map information is disabled, the following function no longer provide information about enemy units, regardless of visibility:

  * [Unit#isHallucination Unit::isHallucination]
  * [Unit#isLoaded Unit::isLoaded]
  * [Unit#getTrainingQueue Unit::getTrainingQueue]
  * [Unit#getTransport Unit::getTransport]
  * [Unit#getLoadedUnits Unit::getLoadedUnits]
  * [Unit#getScarabCount Unit::getScarabCount]
  * [Unit#getSpiderMineCount Unit::getSpiderMineCount]
  * [Unit#getTech Unit::getTech]
  * [Unit#getUpgrade Unit::getUpgrade]
  * [Unit#getRemainingResearchTime Unit::getRemainingResearchTime]
  * [Unit#getRemainingUpgradeTime Unit::getRemainingUpgradeTime]
  * [Unit#isResearching Unit::isResearching]
  * [Unit#isUpgrading Unit::isUpgrading]
  * [Unit#getRallyPosition Unit::getRallyPosition]
  * [Unit#getRallyUnit Unit::getRallyUnit]

To determine if a visible enemy unit is busy researching or upgrading, use [Unit#isIdle Unit::isIdle].

The following functions have changed in functionality:
  * [Unit#getAngle Unit::getAngle] (renamed from Unit::getCurrentDirection) now returns the angle of the unit in radians.
  * [UnitType#topSpeed UnitType::topSpeed] now returns the correct top speed of the UnitType in pixels per frame.
  * [Game#leaveGame Game::leaveGame] now goes to the after-match stats screen, rather than going to the main menu.
  * [AIModule#onEnd AIModule::onEnd] is now called with an argument isWinner, which is true if the ai module has won the game.

Bug fixes:

  * Fixed a bug where [Game#drawText Game::drawTextMap] would use screen coordinates. It now uses map coordinates as expected.
  * Fixed a bug where attackUnit, rightClick, and other orders which take a target unit would not target the right unit in the game.
  * Fixed a bug where [Unit#isGatheringGas Unit::isGatheringGas] and [Unit#isGatheringMinerals Unit::isGatheringMinerals] would sometimes return false, even though the unit was gathering gas/minerals.
  * Fixed a bug where getUnits() functions would return an incomplete list of units when called from onUnitMorph, onUnitShow, or onUnitHide.

Other changes:

  * Added documentation of how to draw text in different colors.
  * Increased speed of multiplayer menus.

== Changes from BWAPI Beta 2.1 (r1416) to BWAPI Beta 2.2 (r1491): ==

The following functions have been added:

  * [AIModule#onUnitShow AIModule::onUnitShow]
  * [AIModule#onUnitHide AIModule::onUnitHide]
  * [AIModule#onUnitMorph AIModule::onUnitMorph]

  * [Unit#getInitialType Unit::getInitialType]
  * [Unit#getInitialPosition Unit::getInitialPosition]
  * [Unit#getInitialTilePosition Unit::getInitialTilePosition]
  * [Unit#getInitialResources Unit::getInitialResources]
  * [Unit#getInitialHitPoints Unit::getInitialHitPoints]

  * [Game#isMultiplayer Game::isMultiplayer]
  * [Game#isPaused Game::isPaused]

  * [Game#getStaticMinerals Game::getStaticMinerals]
  * [Game#getStaticGeysers Game::getStaticGeysers]
  * [Game#getStaticNeutralUnits Game::getStaticNeutralUnits]

  * [Game#drawText Game::drawTextMap]
  * [Game#drawText Game::drawTextMouse]
  * [Game#drawText Game::drawTextScreen]

  * [Game#drawBox Game::drawMapBox]
  * [Game#drawBox Game::drawMouseBox]
  * [Game#drawBox Game::drawScreenBox]

  * [Game#drawTriangle Game::drawMapTriangle]
  * [Game#drawTriangle Game::drawMouseTriangle]
  * [Game#drawTriangle Game::drawScreenTriangle]

  * [Game#drawCircle Game::drawMapCircle]
  * [Game#drawCircle Game::drawMouseCircle]
  * [Game#drawCircle Game::drawScreenCircle]

  * [Game#drawEllipse Game::drawMapEllipse]
  * [Game#drawEllipse Game::drawMouseEllipse]
  * [Game#drawEllipse Game::drawScreenEllipse]

  * [Game#drawDot Game::drawMapDot]
  * [Game#drawDot Game::drawMouseDot]
  * [Game#drawDot Game::drawScreenDot]

  * [Game#drawLine Game::drawMapLine]
  * [Game#drawLine Game::drawMouseLine]
  * [Game#drawLine Game::drawScreenLine]

The following functions have changed in functionality:

  * [Unit#exists Unit::exists] - now returns false for inaccessible units, even if they exist.
  * [AIModule#onUnitCreate AIModule::onUnitCreate] is no longer called for invisible units when complete map information is disabled.

The following functions have been renamed:

  * Game::text has been renamed to [Game#drawText Game::drawText]
  * Game::inReplay has been renamed to [Game#isReplay Game::isReplay]
  * AIModule::onAddUnit has been renamed to [AIModule#onUnitCreate AIModule::onUnitCreate]
  * AIModule::onRemoveUnit has been renamed to [AIModule#onUnitDestroy AIModule::onUnitDestroy]

Other changes:

  * BWAPI no longer crashes on replays.

== Changes from BWAPI Beta 2 (r1400) to BWAPI Beta 2.1 (r1416): ==

  * Fixed a bug that produced phantom marines. An internal unit set in BWAPI was not being reset between matches, so units that existed in a previous match appeared to exist in the next game as phantom marines. Retrieving information from these non existant marines and/or issuing orders to them may have also caused Broodwar to crash.

== Changes from BWAPI Beta to BWAPI Beta 2 (r1400): ==

The following functions have been added:

  * [Unit#isCarryingGas Unit::isCarryingGas]
  * [Unit#isCarryingMinerals Unit::isCarryingMinerals]
  * [Unit#isDefenseMatrixed Unit::isDefenseMatrixed]
  * [Unit#isEnsnared Unit::isEnsnared]
  * [Unit#isIrradiated Unit::isIrradiated]
  * [Unit#isMaelstrommed Unit::isMaelstrommed]
  * [Unit#isParasited Unit::isParasited]
  * [Unit#isPlagued Unit::isPlagued]
  * [Unit#isStimmed Unit::isStimmed]

  * [Game#leaveGame Game::leaveGame] - replaces Game::surrender and now works correctly.
  * [Game#setLocalSpeed Game::setLocalSpeed] - lets AIs increase the speed in single player games.

Other changes:

  * Fixed crash due to null sprite pointer in Broodwar memory
  * Minor update of UnitType information for spells and Terran Nuclear Missile.
  * Minor update of description text shown in Chaoslauncher text box.
  * Example AI Module compiles much faster due to new compile of BWTA.lib.