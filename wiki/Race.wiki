#sidebar TableOfContents

Class header file: [http://code.google.com/p/bwapi/source/browse/trunk/bwapi/include/BWAPI/Race.h# BWAPI/Race.h]

Methods:

  * [#getID getID]
  * [#getName getName]
  * [#getWorker getWorker]
  * [#getCenter getCenter]
  * [#getRefinery getRefinery]
  * [#getTransport getTransport]
  * [#getSupplyProvider getSupplyProvider]



Non-member methods in Races namespace:

  * [#getRace getRace]
  * [#allRaces allRaces]

=== getID ===
int getID();

Returns a unique ID for this race.

=== getName ===
std::string getName();

Returns the name of the race. For example Races::Terran.getName() will return a std::string object containing "Terran".

=== getWorker ===
[UnitType]{{{*}}} getWorker();

Returns the worker unit type for the given race. For example Races::Protoss.getWorker() will return a pointer to UnitTypes::Protoss_Probe.

=== getCenter ===
[UnitType]{{{*}}} getCenter();

Returns the center unit type for the given race. For example Races::Terran.getCenter() will return a pointer to UnitTypes::Terran_Command_Center. While there are three center types for Zerg (Hatchery, Lair, and Hive), Races::Zerg.getCenter() will only return a pointer to UnitTypes::Zerg_Hatchery, since it is the unit type needed to make a new center.

=== getRefinery ===
[UnitType]{{{*}}} getRefinery();

Returns the refinery unit type for the given race. For example: Races::Zerg.getRefinery() will return a pointer to UnitTypes::Zerg_Extractor.

=== getTransport ===
[UnitType]{{{*}}} getTransport();

Returns the transport unit type for the given race. For example: Races::Protoss.getTransport() will return a pointer to UnitTypes::Protoss_Shuttle.

=== getSupplyProvider ===
[UnitType]{{{*}}} getSupplyProvider();

Returns the main supply provider unit type for the given race. For example: Races::Terran.getSupplyProvider() will return a pointer to UnitTypes::Terran_Supply_Depot.

=== getRace ===
[Race] getRace(std::string &name);

Given the name of a race, this function will return the race type. For example: Races::getRace("Zerg") will return Races::Zerg.

=== allRaces ===
std::set<[Race]>& allRaces();

Returns the set of all the races, which are listed below.

== Races ==

  * Zerg
  * Terran
  * Protoss
  * Random
  * Other
  * None
  * Unknown